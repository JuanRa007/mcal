#!/bin/bash
#------------------------------------------------------------------------------#
#
# Comando 'cal' mejorado.
#
#   Se permite introducir como posible parámetro del mes
#   un literal con el nombre o abreviatura del mes, 
#   tanto en español como en inglés.
#
# Ejercicio P2P 6.5 - Curso Miríadax: programación shell.
#
# Autor: JuanRa Hortal
# Derechos de autor.
#
#------------------------------------------------------------------------------#

# Constantes
MISCRIPT=`basename $0`      # Nombre del script sin path 
AYUDA="-help"               # Parámetro para solicitar ayuda
P_MES="-m"                  # Parámetro para incluir meses en literal
ERR_NOPARAM=21              # El parámetro pasado no es correcto.


# Variables globales
MES=0                       # Mes a presentar
ANO=0                       # Año a presentar
MES_HOY=0                   # Mes a día de hoy
ANO_HOY=0                   # Año a día de hoy
PARAM=""                    # Parámetro a comprobar


#------------------------------------------------------------------------------#
# Función de inicializar variables.
#
# Inicializamos algunas variables que luego se usarán.
#------------------------------------------------------------------------------#
f_inicializar (){

    MES_HOY=`date +%m`
    ANO_HOY=`date +%Y`

} # fin f_inicializar


#------------------------------------------------------------------------------#
# Función de ayuda.
#
# Presenta una pequeña ayuda de uso del comando.
#------------------------------------------------------------------------------#
f_ayuda (){

    echo
    echo "AYUDA DEL COMANDO MCAL:"
    echo
    echo "  ${MISCRIPT}: calendario actualizado."
    echo
    echo "  Uso: $0 [mes] [año]"
    echo
    echo "  donde:"
    echo "      - [mes] respesentado entre [1..12] o [ene..dic] o [enero..diciembre]."
    echo "      - [año] representado entre [1..9999]."
    echo
    echo "  Por ejemplo:"
    echo "      $0          Presentará el mes y año actual."
    echo "      $0 -help    Muestra esta ayuda."
    echo "      $0 jan      Presentará el mes enero (january en inglés), y el año actual."
    echo "      $0 10 2017  Presentará el mes octubre del año 2017."
    echo
    echo

} # fin f_ayuda


#------------------------------------------------------------------------------#
# Función Determina el mes a presentar.
#
# En función del parámetro $PARAM (mes)
#------------------------------------------------------------------------------#
 f_busca_mes_lit () {

    # Literales posibles para los meses, tanto en español como en inglés.
    # Abreviado y largo.
    # Español
    MESES_ES_L="enero febrero marzo abril mayo junio julio agosto septiembre noviembre diciembre"
    MESES_ES_C="ene feb mar abr may jun jul ago sep nov dic"
    # Inglés
    MESES_IN_L="january february march april may june july august september october november december"
    MESES_IN_C="jan feb mar apr may jun jul aug sep oct nov dec"

    # Pasamos a minúsculas el parámetro antes de buscarlo.
    PARAM=`echo $PARAM | tr [:upper:] [:lower:]`;

    # Empezamos a buscar el literal pasado en $PARAM. Si lo encontramos, nos vamos devolviendo un cero.
    for mesbase in $MESES_ES_L
    do
        if [ $PARAM = $mesbase ]
        then
            # Encontrado, luego nos vamos con OK.
            return 0;
        fi
    done

    for mesbase in $MESES_IN_L
    do
        if [ $PARAM = $mesbase ]
        then
            # Encontrado, luego nos vamos con OK.
            return 0;
        fi
    done

    for mesbase in $MESES_ES_C
    do
        if [ $PARAM = $mesbase ]
        then
            # Encontrado, luego nos vamos con OK.
            return 0;
        fi
    done

    for mesbase in $MESES_IN_C
    do
        if [ $PARAM = $mesbase ]
        then
            # Encontrado, luego nos vamos con OK.
            return 0;
        fi
    done

    # No lo he encontrado, luego nos vamos con NO OK (error).
    return 1;

 } # fin f_busca_mes


#------------------------------------------------------------------------------#
# Función Determina primer parámetro.
#------------------------------------------------------------------------------#
 f_determina_mes_ano () {

    if [ -n $PARAM ]
    then

        f_busca_mes_lit
        if [ $? = 0 ]
        then
            MES=$PARAM;
            ANO=$ANO_HOY;
        fi

    else
        return $ERR_NOPARAM;
    fi


 } # fin f_determina_mes



##----------------------------------------------------------------------------##
##----------------------------------------------------------------------------##
##                                                                            ##
##                   P R O G R A M A        P R I C I P A L                   ##
##                                                                            ##
##----------------------------------------------------------------------------##
##----------------------------------------------------------------------------##

# Obtenemos la fecha del día, etc.
f_inicializar;

# Determinamos cuántos parámetros me pasan.
case $# in

    # No hay parámetros--> mes y año actuales.
    0) 
        MES=$MES_HOY;
        ANO=$ANO_HOY;;

    # Un parámetros--> o es un mes, o es un año o es -help.
    1)
    # ¿me pide ayuda?
        if [ $1 = $AYUDA ]
        then
            f_ayuda
            exit 0;
#       entonces puede ser un mes o ano.
        else
            # 
            PARAM=$1;
            f_determina_mes_ano

            if [ $? = $ERR_NOPARAM ]
            then
                echo "El valor previo de la función es: $?"
                echo
                echo
            fi
        fi;;

#   Dos parámetros--> es un mes y es un año.
    2)
#       El primero será el mes.
        PARAM=$1;
        f_determina_mes

#       El segundo será el año.
        PARAM=$2;
        f_determina_ano;;


#   Tres o más parámetros, es un error.
    *)
        echo
        echo "ERROR: más parámetros de los permitidos. Teclee el comando correctamente."
        echo
        f_ayuda
        exit 1;;

esac

# Una vez controlados los parámetros, llegaremos aquí ya con
# las variables "LIT_MES" "MES" "ANO" correctamente informadas.
# Llamamos al comando con los parámetros.
cal $LIT_MES $MES $ANO
echo
#
#end.